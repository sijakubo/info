<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Simon Jakubowski</title>
        <link>http://localhost:1313/</link>
        <description>About Simon Jakubowski</description>
        <generator>Hugo -- gohugo.io</generator><language>de</language><managingEditor>sijakubo@gmail.com ( Simon Jakubowski)</managingEditor>
            <webMaster>sijakubo@gmail.com ( Simon Jakubowski)</webMaster><lastBuildDate>Fri, 28 Mar 2025 00:00:00 &#43;0000</lastBuildDate>
            <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>Enhance your Java Spring Applications with AI</title>
    <link>http://localhost:1313/posts/post-11/</link>
    <pubDate>Fri, 08 Mar 2024 00:00:00 &#43;0000</pubDate>
    <author> Simon Jakubowski</author>
    <guid>http://localhost:1313/posts/post-11/</guid>
    <description><![CDATA[<p>I came across the release notes for <a href="https://spring.io/blog/2024/02/23/spring-ai-0-8-0-released" target="_blank" rel="noopener noreffer ">Spring AI 0.8.0</a> and i thought i might give it a try and it&rsquo;s frighteningly simple to do so. Here is a short sample Project: <a href="https://github.com/sijakubo/spring-ai-test" target="_blank" rel="noopener noreffer ">https://github.com/sijakubo/spring-ai-test</a></p>
<p>You just have to:</p>
<ul>
<li>include the Spring AI dependencies</li>
<li>provide an AI token</li>
<li>call the Spring AI proxy (e.g. ChatClient, ImageClient)</li>
</ul>
<p>Supported models are:</p>
<blockquote>
<p><strong>Chat Models</strong></p>
<ul>
<li>OpenAI</li>
<li>Azure Open AI</li>
<li>Amazon Bedrock</li>
<li>Anthropic&rsquo;s Claude</li>
<li>Cohere&rsquo;s Command</li>
<li>AI21 Labs&rsquo; Jurassic-2</li>
<li>Meta&rsquo;s LLama 2</li>
<li>Amazon&rsquo;s Titan</li>
<li>Google Vertex AI Palm - Gemini support coming soon (follow the WIP branch)</li>
<li>HuggingFace - access thousands of models, including those from Meta such as Llama2</li>
<li>Ollama - run AI models on your local machine</li>
</ul>
<p><strong>Text-to-image Models</strong></p>]]></description>
</item>
<item>
    <title>Integrate DynamoDB in Spring Boot and Gitlab-CI using aws sdk 2.x</title>
    <link>http://localhost:1313/posts/post-10/</link>
    <pubDate>Wed, 31 Jan 2024 00:00:00 &#43;0000</pubDate>
    <author> Simon Jakubowski</author>
    <guid>http://localhost:1313/posts/post-10/</guid>
    <description><![CDATA[<p>I had significant issues integrating DynamoDB into one of our projects. The main challenge was finding suitable documentation, as many sources describe integration with AWS SDK version 1.x.</p>
<p>In true Scout&rsquo;s honor, here&rsquo;s a brief description of how to integrate DynamoDB using AWS SDK 2.x into a Spring Boot project.</p>
<p>In the project, start the following Docker container to have a local DynamoDB for development purposes. Here&rsquo;s an excerpt from our <code>docker-compose.yml</code>:</p>]]></description>
</item>
<item>
    <title>CORS for dummies</title>
    <link>http://localhost:1313/posts/post-9/</link>
    <pubDate>Wed, 11 Oct 2023 00:00:00 &#43;0000</pubDate>
    <author> Simon Jakubowski</author>
    <guid>http://localhost:1313/posts/post-9/</guid>
    <description><![CDATA[<h1 id="what-is-cors">What is CORS?</h1>
<p>CORS, an abbreviation for &ldquo;Cross-Origin Resource Sharing,&rdquo; fundamentally aims to ensure that data is distributed only to &ldquo;trusted&rdquo; users.
However, this assurance is not server-side but rather on the client side. For instance, if CORS is enabled on a server, it sends additional
response headers, allowing the client to verify whether the request is permitted from the current origin domain.</p>
<p>Modern browsers block access to data that is not considered &ldquo;trusted&rdquo; for the current origin domain. These are the CORS errors that often
occur in the browser&rsquo;s network tab. Using developer tools such as Postman, data can be retrieved from origins not deemed &ldquo;trusted&rdquo; because
CORS validation is simply ignored. This can occasionally complicate the analysis of such issues.</p>]]></description>
</item>
<item>
    <title>Create a Feature Collection from Postgis Geometries using Postgis &gt;= 3.0.0</title>
    <link>http://localhost:1313/posts/post-8/</link>
    <pubDate>Thu, 27 Apr 2023 00:00:00 &#43;0000</pubDate>
    <author> Simon Jakubowski</author>
    <guid>http://localhost:1313/posts/post-8/</guid>
    <description><![CDATA[<p>Generating a Feature and Feature Collection form postgis is rather simple. If you convert a simple <a href="https://postgis.net/docs/geometry.html" target="_blank" rel="noopener noreffer ">GEOMETRY</a> with the <a href="https://postgis.net/docs/ST_AsGeoJSON.html" target="_blank" rel="noopener noreffer "><code>st_asgeojson</code></a> postgis will generate a GeoJSON &ldquo;geometry&rdquo;.</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="n">st_asgeojson</span><span class="p">(</span><span class="n">f</span><span class="p">.</span><span class="n">geometry</span><span class="p">)</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w"> </span><span class="n">field</span><span class="w"> </span><span class="n">f</span><span class="p">;</span></span></span></code></pre></div></div>
<p>will result in a single geometry:</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-json">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-json" data-lang="json"><span class="line"><span class="cl"><span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;type&#34;</span> <span class="p">:</span> <span class="s2">&#34;Polygon&#34;</span><span class="p">,</span>
</span></span><span class="line"><span class="cl">  <span class="nt">&#34;coordinates&#34;</span> <span class="p">:</span> <span class="p">[</span><span class="err">...</span><span class="p">]</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span></span></span></code></pre></div></div>
<p>If you provide a <strong>RECORD</strong> (since Postgis 3.0.0), postgis will generate a Feature with all the fields as Properties:</p>]]></description>
</item>
<item>
    <title>PostgreSQL Composite Types to reduce boilerplate code from you database schema</title>
    <link>http://localhost:1313/posts/post-7/</link>
    <pubDate>Thu, 30 Mar 2023 00:00:00 &#43;0000</pubDate>
    <author> Simon Jakubowski</author>
    <guid>http://localhost:1313/posts/post-7/</guid>
    <description><![CDATA[<p>PostgreSQL is a powerful and flexible open-source relational database management system. One of its most useful features is the ability to define <a href="https://www.postgresql.org/docs/current/rowtypes.html" target="_blank" rel="noopener noreffer ">custom composite types</a> (Since Postgres 11), which are user-defined data types that combine multiple fields of different types into a single logical entity. In this article, we&rsquo;ll explore the benefits of using composite types in PostgreSQL and how to use them in your database schema.</p>
<h3 id="create-composite-type">Create Composite Type</h3>
<p>To define a composite type in PostgreSQL, you use the CREATE TYPE statement, followed by the name of the type and a list of its component fields and types. For example, here&rsquo;s how you might define a audit type:</p>]]></description>
</item>
<item>
    <title>Zero downtime deployment with breaking DB-Schema change - by example</title>
    <link>http://localhost:1313/posts/post-6/</link>
    <pubDate>Thu, 12 Jan 2023 00:00:00 &#43;0000</pubDate>
    <author> Simon Jakubowski</author>
    <guid>http://localhost:1313/posts/post-6/</guid>
    <description><![CDATA[<p>When running multiple Server nodes, sharing the same Database, it becomes more and more important to handle backwards compatibility on the database especially during Deployments.</p>
<p>When we start da Deployment, a new Server node is being deployed to a cluster. This node will then migrate the Database to it&rsquo;s designated schema version. If this new version is not backwards compatible, the currently running Server instances will run into several problems, reading or writing to the database.</p>]]></description>
</item>
<item>
    <title>Testcontainers | Postgres: Postgis with Spring and Spock</title>
    <link>http://localhost:1313/posts/post-5/</link>
    <pubDate>Tue, 18 Oct 2022 00:00:00 &#43;0000</pubDate>
    <author> Simon Jakubowski</author>
    <guid>http://localhost:1313/posts/post-5/</guid>
    <description><![CDATA[<p>A great way to include all the required resources for integration tests, <a href="https://www.testcontainers.org/" target="_blank" rel="noopener noreffer ">Testcontainers</a> provides an easy way to start docker containers from within your testcode. This removes the necessity to create test <code>docker-compose.yml</code> files and write <code>README.md</code> code on how to even run a test.</p>
<p>Here is a short example using testcontainers with Spring and Spock on a Postgis / Postgres database.</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-groovy">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="nd">@SpringBootTest</span>
</span></span><span class="line"><span class="cl"><span class="nd">@AutoConfigureMockMvc</span>
</span></span><span class="line"><span class="cl"><span class="nd">@AutoConfigureTestDatabase</span><span class="o">(</span><span class="n">replace</span> <span class="o">=</span> <span class="n">AutoConfigureTestDatabase</span><span class="o">.</span><span class="na">Replace</span><span class="o">.</span><span class="na">NONE</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="nd">@ContextConfiguration</span><span class="o">(</span><span class="n">initializers</span> <span class="o">=</span> <span class="o">[</span><span class="n">Initializer</span><span class="o">.</span><span class="na">class</span><span class="o">])</span>
</span></span><span class="line"><span class="cl"><span class="kd">class</span> <span class="nc">FieldControllerTest</span> <span class="kd">extends</span> <span class="n">IntegrationTest</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nd">@Shared</span>
</span></span><span class="line"><span class="cl">  <span class="kd">public</span> <span class="kd">static</span> <span class="n">JdbcDatabaseContainer</span> <span class="n">postgreSQLContainer</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PostgisContainerProvider</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="na">newInstance</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="na">withDatabaseName</span><span class="o">(</span><span class="s2">&#34;integration-tests-db&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="na">withUsername</span><span class="o">(</span><span class="s2">&#34;sa&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">.</span><span class="na">withPassword</span><span class="o">(</span><span class="s2">&#34;sa&#34;</span><span class="o">);</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kd">static</span> <span class="kd">class</span> <span class="nc">Initializer</span> <span class="kd">implements</span> <span class="n">ApplicationContextInitializer</span><span class="o">&lt;</span><span class="n">ConfigurableApplicationContext</span><span class="o">&gt;</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="kt">void</span> <span class="nf">initialize</span><span class="o">(</span><span class="n">ConfigurableApplicationContext</span> <span class="n">configurableApplicationContext</span><span class="o">)</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">      <span class="n">postgreSQLContainer</span><span class="o">.</span><span class="na">start</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">      <span class="n">TestPropertyValues</span><span class="o">.</span><span class="na">of</span><span class="o">(</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;spring.datasource.url=&#34;</span> <span class="o">+</span> <span class="n">postgreSQLContainer</span><span class="o">.</span><span class="na">getJdbcUrl</span><span class="o">(),</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;spring.datasource.username=&#34;</span> <span class="o">+</span> <span class="n">postgreSQLContainer</span><span class="o">.</span><span class="na">getUsername</span><span class="o">(),</span>
</span></span><span class="line"><span class="cl">        <span class="s2">&#34;spring.datasource.password=&#34;</span> <span class="o">+</span> <span class="n">postgreSQLContainer</span><span class="o">.</span><span class="na">getPassword</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">      <span class="o">).</span><span class="na">applyTo</span><span class="o">(</span><span class="n">configurableApplicationContext</span><span class="o">.</span><span class="na">getEnvironment</span><span class="o">());</span>
</span></span><span class="line"><span class="cl">    <span class="o">}</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nd">@Autowired</span>
</span></span><span class="line"><span class="cl">  <span class="n">MockMvc</span> <span class="n">mockMvc</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="nd">@Autowired</span>
</span></span><span class="line"><span class="cl">  <span class="n">FieldRepository</span> <span class="n">fieldRepository</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="kt">void</span> <span class="nf">setup</span><span class="o">()</span> <span class="o">{</span>
</span></span><span class="line"><span class="cl">    <span class="n">fieldRepository</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="k">new</span> <span class="n">Field</span><span class="o">(</span>
</span></span><span class="line"><span class="cl">      <span class="n">UUID</span><span class="o">.</span><span class="na">fromString</span><span class="o">(</span><span class="s1">&#39;ad68f894-c16b-4953-b577-7cddb3e85ae5&#39;</span><span class="o">),</span> <span class="s2">&#34;initSampleField&#34;</span><span class="o">,</span>
</span></span><span class="line"><span class="cl">      <span class="k">new</span> <span class="nf">Polygon</span><span class="o">(</span>
</span></span><span class="line"><span class="cl">        <span class="n">PositionSequenceBuilders</span><span class="o">.</span><span class="na">variableSized</span><span class="o">(</span><span class="n">G2D</span><span class="o">.</span><span class="na">class</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">5.8208837124389</span><span class="o">,</span> <span class="mf">51.0596004663904</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">5.83490292265498</span><span class="o">,</span> <span class="mf">51.0571257015788</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">5.87078646658134</span><span class="o">,</span> <span class="mf">51.0451607414904</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">5.79146302423308</span><span class="o">,</span> <span class="mf">51.0612386272784</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="mf">5.8208837124389</span><span class="o">,</span> <span class="mf">51.0596004663904</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">          <span class="o">.</span><span class="na">toPositionSequence</span><span class="o">(),</span>
</span></span><span class="line"><span class="cl">        <span class="n">CoordinateReferenceSystems</span><span class="o">.</span><span class="na">WGS84</span>
</span></span><span class="line"><span class="cl">      <span class="o">)</span>
</span></span><span class="line"><span class="cl">    <span class="o">))</span>
</span></span><span class="line"><span class="cl">  <span class="o">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="o">...</span>
</span></span><span class="line"><span class="cl"><span class="o">}</span></span></span></code></pre></div></div>
<p>To integrate testcontainers into your project, you&rsquo;ll need the following dependencies:</p>]]></description>
</item>
<item>
    <title>Postgres JSON beginner Class</title>
    <link>http://localhost:1313/posts/post-4/</link>
    <pubDate>Sat, 10 Jul 2021 00:00:00 &#43;0000</pubDate>
    <author> Simon Jakubowski</author>
    <guid>http://localhost:1313/posts/post-4/</guid>
    <description><![CDATA[<p>Operators see: <a href="https://www.postgresql.org/docs/9.5/functions-json.html" target="_blank" rel="noopener noreffer ">https://www.postgresql.org/docs/9.5/functions-json.html</a></p>
<h1 id="create-column-using-jsonb">Create column using jsonb</h1>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">CREATE</span><span class="w"> </span><span class="k">TABLE</span><span class="w"> </span><span class="n">article</span><span class="w"> </span><span class="p">(</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">id</span><span class="w">      </span><span class="n">UUID</span><span class="w"> </span><span class="k">PRIMARY</span><span class="w"> </span><span class="k">KEY</span><span class="p">,</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">    </span><span class="n">properties</span><span class="w"> </span><span class="n">JSONB</span><span class="w"> </span><span class="k">NOT</span><span class="w"> </span><span class="k">NULL</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="p">);</span></span></span></code></pre></div></div>
<h1 id="insert-values">Insert values</h1>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">INSERT</span><span class="w"> </span><span class="k">INTO</span><span class="w"> </span><span class="n">article</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">VALUES</span><span class="w"> </span><span class="p">(</span><span class="n">gen_random_uuid</span><span class="p">(),</span><span class="w"> </span><span class="s1">&#39;{
</span></span></span><span class="line"><span class="cl"><span class="s1">  &#34;price&#34;: 12.1,
</span></span></span><span class="line"><span class="cl"><span class="s1">  &#34;name&#34;: &#34;Kugelschreiber&#34;,
</span></span></span><span class="line"><span class="cl"><span class="s1">  &#34;tags&#34;: {
</span></span></span><span class="line"><span class="cl"><span class="s1">    &#34;manufacturer&#34;: &#34;Siemens&#34;,
</span></span></span><span class="line"><span class="cl"><span class="s1">    &#34;discounted&#34;: true
</span></span></span><span class="line"><span class="cl"><span class="s1">  }
</span></span></span><span class="line"><span class="cl"><span class="s1">}&#39;</span><span class="p">)</span></span></span></code></pre></div></div>
<h1 id="select-value-from-json">Select value from JSON</h1>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">select</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">properties</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="s1">&#39;price&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w">  </span><span class="n">properties</span><span class="w"> </span><span class="o">-&gt;&gt;</span><span class="w"> </span><span class="s1">&#39;price&#39;</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">from</span><span class="w"> </span><span class="n">article</span></span></span></code></pre></div></div>
<ul>
<li><code>-&gt;</code> will extract the value as JSONB</li>
<li><code>-&gt;&gt;</code> will extract the value as text</li>
</ul>
<h1 id="compare-values">Compare values</h1>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w"> </span><span class="n">article</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w"> </span><span class="k">CAST</span><span class="p">(</span><span class="n">properties</span><span class="w"> </span><span class="o">-&gt;&gt;</span><span class="w"> </span><span class="s1">&#39;price&#39;</span><span class="w"> </span><span class="k">AS</span><span class="w"> </span><span class="nb">NUMERIC</span><span class="p">)</span><span class="w"> </span><span class="o">&gt;</span><span class="w"> </span><span class="mi">10</span></span></span></code></pre></div></div>
<h1 id="check-where-value-is-contained">Check where value is contained</h1>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-sql">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-sql" data-lang="sql"><span class="line"><span class="cl"><span class="k">SELECT</span><span class="w"> </span><span class="o">*</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">FROM</span><span class="w"> </span><span class="n">article</span><span class="w">
</span></span></span><span class="line"><span class="cl"><span class="w"></span><span class="k">WHERE</span><span class="w"> </span><span class="n">properties</span><span class="w"> </span><span class="o">-&gt;</span><span class="w"> </span><span class="s1">&#39;tags&#39;</span><span class="w"> </span><span class="o">?</span><span class="w"> </span><span class="s1">&#39;discounted&#39;</span></span></span></code></pre></div></div>
<p>or</p>]]></description>
</item>
<item>
    <title>Groovy 3 Release Note Hightlights</title>
    <link>http://localhost:1313/posts/post-3/</link>
    <pubDate>Fri, 09 Jul 2021 00:00:00 &#43;0000</pubDate>
    <author> Simon Jakubowski</author>
    <guid>http://localhost:1313/posts/post-3/</guid>
    <description><![CDATA[<p>I&rsquo;m a huge Fan of groovy and therefore always excited about new additions and changes to the groovy lang. Therefore, here&rsquo;s a list of my personal highlights of the groovy 3 release.</p>
<p>The complete release-notes can be found here: <a href="https://groovy-lang.org/releasenotes/groovy-3.0.html" target="_blank" rel="noopener noreffer ">Groovy 3 Release Notes</a>:</p>
<h2 id="in-operator"><code>!in</code> Operator</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-groovy">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="mi">4</span> <span class="o">!</span><span class="k">in</span> <span class="o">[</span><span class="mi">5</span><span class="o">,</span> <span class="mi">6</span><span class="o">,</span> <span class="mi">19</span><span class="o">]</span> <span class="s">//</span> <span class="kc">true</span></span></span></code></pre></div></div>
<h2 id="instanceof-operator"><code>!instanceof</code> Operator</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-groovy">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">()</span> <span class="o">!</span><span class="k">instanceof</span> <span class="n">Temporal</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">LocalDate</span><span class="o">.</span><span class="na">now</span><span class="o">()</span> <span class="o">!</span><span class="k">instanceof</span> <span class="n">Instant</span> <span class="s">//</span> <span class="kc">true</span></span></span></code></pre></div></div>
<h2 id="-elvis-operator"><code>?=</code> Elvis Operator</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-groovy">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="kt">def</span> <span class="n">last</span> <span class="o">=</span> <span class="kc">null</span>
</span></span><span class="line"><span class="cl"><span class="n">last</span> <span class="o">?=</span> <span class="s1">&#39;Doe&#39;</span>
</span></span><span class="line"><span class="cl"><span class="n">last</span> <span class="o">==</span> <span class="s1">&#39;Doe&#39;</span></span></span></code></pre></div></div>
<h2 id="-and--identical-operators"><code>===</code> and <code>!==</code> Identical Operators</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-groovy">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="kt">def</span> <span class="n">emp1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Employee</span><span class="o">(</span><span class="nl">name:</span> <span class="s2">&#34;Simon Jakubowski&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="kt">def</span> <span class="n">emp2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Employee</span><span class="o">(</span><span class="nl">name:</span> <span class="s2">&#34;Simon Jakubowski&#34;</span><span class="o">)</span>
</span></span><span class="line"><span class="cl"><span class="kt">def</span> <span class="n">emp3</span> <span class="o">=</span> <span class="n">emp1</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">emp1</span> <span class="o">==</span> <span class="n">emp2</span> <span class="c1">// true
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">emp1</span> <span class="o">===</span> <span class="n">emp2</span> <span class="c1">// false
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">emp1</span> <span class="o">===</span> <span class="n">emp3</span> <span class="s">//</span> <span class="kc">true</span></span></span></code></pre></div></div>
<h2 id="safe-map-list-array-access">safe map, list, array access</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-groovy">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="kt">def</span> <span class="n">emps</span> <span class="o">=</span> <span class="o">[</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;boss&#34;</span>     <span class="o">:</span> <span class="o">[</span><span class="s2">&#34;joe&#34;</span><span class="o">],</span>
</span></span><span class="line"><span class="cl">  <span class="s2">&#34;developer&#34;</span><span class="o">:</span> <span class="o">[</span><span class="s2">&#34;sja&#34;</span><span class="o">,</span> <span class="s2">&#34;sro&#34;</span><span class="o">,</span> <span class="s2">&#34;tti&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl"><span class="o">]</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="n">emps</span><span class="o">[</span><span class="s2">&#34;boss&#34;</span><span class="o">]</span> <span class="c1">// [&#34;joe&#34;]
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">employees</span><span class="o">[</span><span class="s2">&#34;boss&#34;</span><span class="o">]</span> <span class="c1">// throws NPE
</span></span></span><span class="line"><span class="cl"><span class="c1"></span><span class="n">employees</span><span class="o">?[</span><span class="s2">&#34;boss&#34;</span><span class="o">]</span> <span class="s">//</span> <span class="kc">null</span></span></span></code></pre></div></div>
<h2 id="support-for-lambda-expressions--method-references">Support for lambda expressions + Method References</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-groovy">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-groovy" data-lang="groovy"><span class="line"><span class="cl"><span class="o">[</span><span class="s2">&#34;test&#34;</span><span class="o">,</span> <span class="s2">&#34;arba&#34;</span><span class="o">]</span>
</span></span><span class="line"><span class="cl">  <span class="o">.</span><span class="na">stream</span><span class="o">()</span>
</span></span><span class="line"><span class="cl">  <span class="o">.</span><span class="na">map</span><span class="o">(</span><span class="nl">String:</span><span class="o">:</span><span class="n">toUpperCase</span><span class="o">)</span>
</span></span><span class="line"><span class="cl">  <span class="o">.</span><span class="na">collect</span><span class="o">(</span><span class="n">Collectors</span><span class="o">.</span><span class="na">toList</span><span class="o">())</span></span></span></code></pre></div></div>
<h2 id="reduction-of-the-main-groovy-package">Reduction of the main groovy package</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-gradle">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-gradle" data-lang="gradle"><span class="line"><span class="cl"><span class="n">org</span><span class="o">.</span><span class="na">codehaus</span><span class="o">.</span><span class="na">groovy</span><span class="o">:</span><span class="nl">groovy:</span><span class="mf">3.0</span><span class="o">.</span><span class="mi">8</span>
</span></span><span class="line"><span class="cl"><span class="n">org</span><span class="o">.</span><span class="na">codehaus</span><span class="o">.</span><span class="na">groovy</span><span class="o">:</span><span class="n">groovy</span><span class="o">-</span><span class="nl">json:</span><span class="mf">3.0</span><span class="o">.</span><span class="mi">8</span>
</span></span><span class="line"><span class="cl"><span class="o">*</span> <span class="n">groovy</span><span class="o">.</span><span class="na">json</span><span class="o">.</span><span class="na">JsonSlurper</span>
</span></span><span class="line"><span class="cl"><span class="n">org</span><span class="o">.</span><span class="na">codehaus</span><span class="o">.</span><span class="na">groovy</span><span class="o">:</span><span class="n">groovy</span><span class="o">-</span><span class="nl">xml:</span><span class="mf">3.0</span><span class="o">.</span><span class="mi">8</span>
</span></span><span class="line"><span class="cl"><span class="o">*</span> <span class="n">groovy</span><span class="o">.</span><span class="na">xml</span><span class="o">.</span><span class="na">XmlSlurper</span></span></span></code></pre></div></div>]]></description>
</item>
<item>
    <title>Creating a blog using Gatsby and host it on GitHub Pages in 15 Minutes for free</title>
    <link>http://localhost:1313/posts/post-2/</link>
    <pubDate>Thu, 09 Jul 2020 00:00:00 &#43;0000</pubDate>
    <author> Simon Jakubowski</author>
    <guid>http://localhost:1313/posts/post-2/</guid>
    <description><![CDATA[<p>Of course you would write the first blog post about creating the actual blog itself. So do I.</p>
<h1 id="create-gatsby-blog">Create Gatsby blog</h1>
<h2 id="install-gatsby">Install Gatsby</h2>
<p>First of all, we need to install <a href="https://www.gatsbyjs.com/" target="_blank" rel="noopener noreffer ">Gatsby</a> which will generate the static blog pages</p>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ brew install gatsby-cli</span></span></code></pre></div></div>
<h2 id="create-a-blog-based-on-a-template">Create a blog based on a Template</h2>
<div class="code-block code-line-numbers open" style="counter-reset: code-block 0">
    <div class="code-header language-shell">
        <span class="code-title"><i class="arrow fas fa-angle-right fa-fw" aria-hidden="true"></i></span>
        <span class="ellipses"><i class="fas fa-ellipsis-h fa-fw" aria-hidden="true"></i></span>
        <span class="copy" title="Copy to clipboard"><i class="far fa-copy fa-fw" aria-hidden="true"></i></span>
    </div><div class="highlight"><pre tabindex="0" class="chroma"><code class="language-shell" data-lang="shell"><span class="line"><span class="cl">$ gatsby new &lt;name_of_the_blog&gt; &lt;template_url&gt;
</span></span><span class="line"><span class="cl">//e.g.:
</span></span><span class="line"><span class="cl">$ gatsby new blog https://github.com/niklasmtj/gatsby-starter-julia</span></span></code></pre></div></div>
<h2 id="start-the-blog-and-customise-it">Start the blog and customise it</h2>
<p>The blog gets refreshed automatically when you save the files in your IDE</p>]]></description>
</item>
</channel>
</rss>
